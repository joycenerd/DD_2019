$date
	Mon May  6 20:29:28 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test_bench $end
$var wire 16 ! adder_ans [15:0] $end
$var reg 5 " cnt_right [4:0] $end
$var reg 5 # cnt_test [4:0] $end
$var reg 16 $ correct_ans [15:0] $end
$var reg 16 % testInput_a [15:0] $end
$var reg 16 & testInput_b [15:0] $end
$scope module test $end
$var wire 16 ' a [15:0] $end
$var wire 10 ( a_frac [9:0] $end
$var wire 16 ) b [15:0] $end
$var wire 5 * b_exp [4:0] $end
$var wire 10 + b_frac [9:0] $end
$var wire 1 , sub $end
$var wire 16 - tmp_out [15:0] $end
$var wire 16 . s [15:0] $end
$var wire 1 / out_sign $end
$var wire 10 0 out_frac [9:0] $end
$var wire 5 1 out_exp [4:0] $end
$var wire 15 2 c_frac [14:0] $end
$var wire 14 3 a_small_frac [13:0] $end
$var wire 1 4 a_sign $end
$var wire 1 5 a_op_sub $end
$var wire 11 6 a_large_frac [10:0] $end
$var wire 5 7 a_exp [4:0] $end
$var reg 5 8 tmp_out_exp [4:0] $end
$var reg 10 9 tmp_out_frac [9:0] $end
$var reg 1 : tmp_out_sign $end
$scope module alignment $end
$var wire 16 ; a [15:0] $end
$var wire 16 < b [15:0] $end
$var wire 1 5 op_sub $end
$var wire 1 , sub $end
$var wire 5 = temp_exp [4:0] $end
$var wire 24 > small_frac25 [23:0] $end
$var wire 14 ? small_frac14 [13:0] $end
$var wire 11 @ small_frac11 [10:0] $end
$var wire 1 4 sign $end
$var wire 11 A large_frac11 [10:0] $end
$var wire 1 B fp_small_hidden_bit $end
$var wire 16 C fp_small [15:0] $end
$var wire 1 D fp_large_hidden_bit $end
$var wire 16 E fp_large [15:0] $end
$var wire 5 F exp_diff [4:0] $end
$var wire 1 G exchange $end
$upscope $end
$scope module calculation $end
$var wire 11 H large_frac11 [10:0] $end
$var wire 1 5 op_sub $end
$var wire 14 I small_frac14 [13:0] $end
$var wire 15 J cal_frac [14:0] $end
$var wire 15 K aligned_small_frac [14:0] $end
$var wire 15 L aligned_large_frac [14:0] $end
$upscope $end
$scope module normalization $end
$var wire 15 M cal_frac [14:0] $end
$var wire 1 N frac_plus_1 $end
$var wire 1 4 sign $end
$var wire 5 O temp_exp [4:0] $end
$var wire 4 P zeros [3:0] $end
$var wire 16 Q s [15:0] $end
$var wire 12 R frac_round [11:0] $end
$var wire 14 S f3 [13:0] $end
$var wire 14 T f2 [13:0] $end
$var wire 14 U f1 [13:0] $end
$var wire 14 V f0 [13:0] $end
$var wire 5 W exponent [4:0] $end
$var reg 6 X exp0 [5:0] $end
$var reg 14 Y frac0 [13:0] $end
$upscope $end
$upscope $end
$scope task failure_case $end
$var reg 16 Z correct_ans [15:0] $end
$var reg 16 [ result [15:0] $end
$var reg 16 \ testInput_a [15:0] $end
$var reg 16 ] testInput_b [15:0] $end
$upscope $end
$scope task nan_case $end
$var reg 16 ^ correct_ans [15:0] $end
$var reg 16 _ testInput_a [15:0] $end
$var reg 16 ` testInput_b [15:0] $end
$upscope $end
$scope task success_case $end
$var reg 16 a correct_ans [15:0] $end
$var reg 16 b testInput_a [15:0] $end
$var reg 16 c testInput_b [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
xN
bx M
b0xxxxxxxxxxx000 L
b0xxxxxxxxxxxxxx K
bx J
bx I
bx H
xG
bx F
bx E
xD
bx C
xB
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
x:
bx 9
bx 8
bx 7
bx 6
x5
x4
bx 3
bx 2
bx 1
bx 0
x/
bx .
bx -
0,
bz +
bz *
bx )
bz (
bx '
bx &
bx %
bx $
b0 #
b0 "
bx !
$end
#1000
b11111 8
b11111 1
b11111 W
b1101110011 9
b1101110011 0
b11101110011 R
1N
b11111 X
b11101110010110 Y
b11101110010110 V
b11101110010110 U
b11101110010110 T
b11101110010110 S
b0 P
b11101110010110 2
b11101110010110 J
b11101110010110 M
b101110010110 K
b101110010110 3
b101110010110 ?
b101110010110 I
b1011100101100000000000 >
05
b10 F
b1111111101110011 !
b1111111101110011 .
1:
1/
1D
b11000000000000 L
b11000000000 6
b11000000000 A
b11000000000 H
b11111 7
b11111 =
b11111 O
1B
b10111001011 @
b1111111101110011 -
b1111111101110011 Q
14
0G
b1111111000000000 E
b1111010111001011 C
b1 #
b1111111000000000 $
b1111010111001011 &
b1111010111001011 )
b1111010111001011 <
b1111111000000000 %
b1111111000000000 '
b1111111000000000 ;
#11000
b1111111000000000 ^
b1111010111001011 `
b1111111000000000 _
#12000
b11 8
b10001011110100 V
b1011110 9
b10001011110100 U
0N
b1011110 0
b10001011110100 T
b11 1
b0 P
b10001011110100 S
b10001011110 R
b11 W
15
b10001011110100 Y
b1101101101100 K
b1101101101100 3
b1101101101100 ?
b1101101101100 I
b10001011110100 2
b10001011110100 J
b10001011110100 M
b110001011110 !
b110001011110 .
0:
b11 X
b11011011011000000000000 >
0/
b11011011011 @
b11111001100000 L
b11111001100 6
b11111001100 A
b11111001100 H
b11 7
b11 =
b11 O
b1 F
b110001011110 -
b110001011110 Q
04
b1000101011011011 C
0G
b111111001100 E
b10 #
b110001011110 $
b1000101011011011 &
b1000101011011011 )
b1000101011011011 <
b111111001100 %
b111111001100 '
b111111001100 ;
#22000
b1 "
b110001011110 a
b1000101011011011 c
b111111001100 b
#23000
b10100 8
1N
b101001000101100 !
b101001000101100 .
b1000101100 9
b1000101100 0
b11000101100 R
b11000101011111 Y
b0 P
b11000101011111 V
b11000101011111 U
b11000101011111 T
b10100 1
b11000101011111 S
b101001000101100 -
b101001000101100 Q
b10100 W
b1 K
b1 3
b1 ?
b1 I
b11000101011111 2
b11000101011111 J
b11000101011111 M
b10100 X
b11111100110 >
b11111100110 @
b11000101100000 L
b11000101100 6
b11000101100 A
b11000101100 H
b10100 7
b10100 =
b10100 O
b10011 F
b1000011111100110 C
b101001000101100 E
b11 #
b101001000101100 $
b1000011111100110 &
b1000011111100110 )
b1000011111100110 <
b101001000101100 %
b101001000101100 '
b101001000101100 ;
#33000
b10 "
b101001000101100 a
b1000011111100110 c
b101001000101100 b
#34000
b11011 8
b110110110100000 !
b110110110100000 .
b110100000 9
b110100000 0
b10110100000 R
b10110011111111 Y
b10110011111111 V
b10110011111111 U
b10110011111111 T
b11011 1
b10110011111111 S
b110110110100000 -
b110110110100000 Q
b11011 W
b11110001001 >
b10110011111111 2
b10110011111111 J
b10110011111111 M
b11011 X
b11110001001 @
b10110100000000 L
b10110100000 6
b10110100000 A
b10110100000 H
b11011 7
b11011 =
b11011 O
b10001 F
b1010101110001001 C
b110110110100000 E
b100 #
b110110110100000 $
b1010101110001001 &
b1010101110001001 )
b1010101110001001 <
b110110110100000 %
b110110110100000 '
b110110110100000 ;
#44000
b11 "
b110110110100000 a
b1010101110001001 c
b110110110100000 b
#45000
b100 8
1N
b100100000 9
b100100000 0
b10100100000 R
b10100011111100 Y
b10100011111100 V
b10100011111100 U
b10100011111100 T
b100 1
b10100011111100 S
b100 W
b110011010100 K
b110011010100 3
b110011010100 ?
b110011010100 I
b1001000100100000 !
b1001000100100000 .
1:
15
b1100110101000000000000 >
1/
b10100011111100 2
b10100011111100 J
b10100011111100 M
b100 X
b11001101010 @
b1001000100100000 -
b1001000100100000 Q
14
b11010111010000 L
b11010111010 6
b11010111010 A
b11010111010 H
b100 7
b100 =
b100 O
b10 F
b101001101010 C
1G
b1001001010111010 E
b101 #
b1001000100100000 $
b1001001010111010 &
b1001001010111010 )
b1001001010111010 <
b101001101010 %
b101001101010 '
b101001101010 ;
#55000
b100 "
b1001000100100000 a
b1001001010111010 c
b101001101010 b
#56000
b1101 8
b1011011100010000 !
b1011011100010000 .
b1100010000 9
0N
b1100010000 0
b11100010000000 V
b11100010000000 U
b11100010000 R
b11100010000000 T
b1101 1
b100 P
b11100010000000 Y
b1110001000 S
b1011011100010000 -
b1011011100010000 Q
b1101 W
b10000101001000 K
b10000101001000 3
b10000101001000 ?
b10000101001000 I
b1110001000 2
b1110001000 J
b1110001000 M
b1101 X
15
b100001010010000000000000 >
b10010011010000 L
b10010011010 6
b10010011010 A
b10010011010 H
b10001 7
b10001 =
b10001 O
b10000101001 @
b0 F
b1100010010011010 E
0G
b100010000101001 C
b110 #
b1011011100010000 $
b100010000101001 &
b100010000101001 )
b100010000101001 <
b1100010010011010 %
b1100010010011010 '
b1100010010011010 ;
#66000
b101 "
b1011011100010000 a
b100010000101001 c
b1100010010011010 b
#67000
b1111 8
b1101100 9
b10001101100000 V
b1101100 0
b1000110110000 U
b1000110110000 T
b10001101100 R
b1111 1
b1 P
b10001101100000 Y
b1000110110000 S
b1111 W
b10110101100000 K
b10110101100000 3
b10110101100000 ?
b10110101100000 I
b1000110110000 2
b1000110110000 J
b1000110110000 M
b11110001101100 !
b11110001101100 .
0:
b1111 X
b101101011000000000000000 >
0/
b10110101100 @
b11111100010000 L
b11111100010 6
b11111100010 A
b11111100010 H
b10000 7
b10000 =
b10000 O
b0 F
b11110001101100 -
b11110001101100 Q
04
b1100000110101100 C
0G
b100001111100010 E
b111 #
b11110001101100 $
b1100000110101100 &
b1100000110101100 )
b1100000110101100 <
b100001111100010 %
b100001111100010 '
b100001111100010 ;
#77000
b110 "
b11110001101100 a
b1100000110101100 c
b100001111100010 b
#78000
b1111 8
1N
b1101000010 9
b11101000001100 V
b1101000010 0
b1 P
b1110100000110 U
b11101000010 R
b1110100000110 T
b1111 1
b11101000001100 Y
b1110100000110 S
b1111 W
15
b110100111010 K
b110100111010 3
b110100111010 ?
b110100111010 I
b1110100000110 2
b1110100000110 J
b1110100000110 M
b11111101000010 !
b11111101000010 .
0:
b1111 X
b1101001110100000000000 >
0/
b11010011101 @
b10101001000000 L
b10101001000 6
b10101001000 A
b10101001000 H
b10000 7
b10000 =
b10000 O
b10 F
b11111101000010 -
b11111101000010 Q
04
b1011101010011101 C
1G
b100000101001000 E
b1000 #
b11111101000010 $
b100000101001000 &
b100000101001000 )
b100000101001000 <
b1011101010011101 %
b1011101010011101 '
b1011101010011101 ;
#88000
b111 "
b11111101000010 a
b100000101001000 c
b1011101010011101 b
#89000
b0 8
0N
b0 9
b0 V
b0 0
b1111 P
b0 U
b0 R
b0 T
b0 1
b0 Y
b0 S
b0 W
15
b0 !
b0 .
0:
b11010011101000 K
b11010011101000 3
b11010011101000 ?
b11010011101000 I
1/
b0 2
b0 J
b0 M
b0 X
b110100111010000000000000 >
b11101010011101 C
b1000000000000000 -
b1000000000000000 Q
14
b11010011101000 L
b11010011101 6
b11010011101 A
b11010011101 H
b1110 7
b1110 =
b1110 O
b0 F
0G
b1011101010011101 E
b1001 #
b0 $
b11101010011101 &
b11101010011101 )
b11101010011101 <
#99000
b1000 "
b0 a
b11101010011101 c
#100000
b1010 #
#110000
b1001 "
